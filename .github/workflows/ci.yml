name: CI + Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest

    services:
      qdrant:
        image: qdrant/qdrant:latest
        ports:
          - 6333:6333
        options: >-
          --health-cmd="curl -f http://localhost:6333/ || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=10

    env:
      NEXT_PUBLIC_API_BASE: http://localhost:8000
      VECTOR_STORE: qdrant
      COLLECTION_NAME: policy_helper
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install backend dependencies
        working-directory: backend
        run: |
          pip install -r requirements.txt
          pip install pytest

      - name: Run backend tests
        working-directory: backend
        run: pytest -q app/tests

      - name: Build frontend
        working-directory: frontend
        run: |
          npm ci --legacy-peer-deps
          npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ai-policy-helper-backend:latest

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ai-policy-helper-frontend:latest
